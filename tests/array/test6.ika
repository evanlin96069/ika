// A simple brainfuck interpreter
extern fn memset(s: *void, c: i32, n: u32) *void;
extern fn strlen(s: []u8) u32;

const TAPE_LENGTH = 100;

var tape: [TAPE_LENGTH]u8;

fn interpreter(code: []u8) void {
    var cur: u32 = 0;
    var loop: u32;

    var code_size: u32 = strlen(code);

    memset(&tape, 0, TAPE_LENGTH);

    var i: u32 = 0;
    while (i < code_size) : (i += 1) {
        var c: u8 = code[i];

        if (c == '>') {
            cur += 1;
        } else if (c == '<') {
            cur -= 1;
        } else if (c == '+') {
            tape[cur] += 1;
        } else if (c == '-') {
            tape[cur] -= 1;
        } else if (c == '.') {
            "%c", tape[cur];
        } else if (c == ',') {
            // Not implemented
            tape[cur] = 0;
        } else if (c == '[') {
            if (tape[cur] == 0) {
                loop = 1;
                while (loop > 0) {
                    i += 1;
                    if (code[i] == '[') {
                        loop += 1;
                    } else if (code[i] == ']') {
                        loop -= 1;
                    }
                }
            }
        } else if (c == ']') {
            if (tape[cur] != 0) {
                loop = 1;
                while (loop > 0) {
                    i -= 1;
                    if (code[i] == '[') {
                        loop -= 1;
                    } else if (code[i] == ']') {
                        loop += 1;
                    }
                }
            }
        }
    }
}

const code = "++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>.";
interpreter(code);
